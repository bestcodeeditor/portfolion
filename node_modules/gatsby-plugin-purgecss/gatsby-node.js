'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.onCreateWebpackConfig = onCreateWebpackConfig;

var _utils = require('./utils');

var _paths = require('./paths');

var _paths2 = _interopRequireDefault(_paths);

var _shared = require('./shared');

var _shared2 = _interopRequireDefault(_shared);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /**
                                                                                                                                                                                                                              * @typedef {import('webpack').Configuration} WebpackConfig
                                                                                                                                                                                                                              * @typedef {import('webpack').RuleSetRule} RuleSetRule
                                                                                                                                                                                                                              * @typedef {import('webpack').RuleSetLoader} RuleSetLoader
                                                                                                                                                                                                                              */

const loadersRegex = /stylus-loader|sass-loader|less-loader/;

function onCreateWebpackConfig({ actions, stage, getConfig }, _ref) {
  let plugins = _ref.plugins,
      userOptions = _objectWithoutProperties(_ref, ['plugins']);

  userOptions = _extends({
    content: [_paths2.default.src],
    rejected: true,
    printRejected: false,
    whitelist: ['html', 'body']
  }, userOptions);

  if (userOptions.rejected && stage === 'build-html') {
    console.log('\x1b[33m%s\x1b[0m', `gatsby-plugin-purgecss removed ${_shared2.default.removedQuantity} selectors`);
  }

  if (stage !== 'build-javascript') {
    return;
  }

  const setWebpackConfig = actions.setWebpackConfig;

  /**
   * @type {WebpackConfig}
   */

  const config = getConfig();
  const existingRules = config.module.rules;

  /**
   * @type {RuleSetLoader}
   */
  const purgecssloader = {
    loader: _paths2.default.loader,
    options: userOptions
  };

  existingRules.forEach(rule => {
    if (Array.isArray(rule.oneOf)) {
      rule.oneOf.forEach(rule => {
        if (Array.isArray(rule.use)) {
          const index = (0, _utils.findLoader)(rule.use, loadersRegex);
          (0, _utils.insertLoader)(rule.use, index, purgecssloader);
        }
      });
    }
  });

  actions.replaceWebpackConfig(config);

  /**
   * @type {RuleSetRule}
   */
  const purgecssRule = {
    test: /.css$/,
    use: [purgecssloader]
  };

  setWebpackConfig({
    module: {
      rules: [purgecssRule]
    }
  });
}